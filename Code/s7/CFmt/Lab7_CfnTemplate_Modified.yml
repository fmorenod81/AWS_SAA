AWSTemplateFormatVersion: 2010-09-09
Description: RDS MySQL instance for Lab7c. You have to have a Keypair on that Region. Adapted from https://github.com/prisma/database-templates/tree/master/aws
Parameters:
    KeyName:
        Description: Name of an existing EC2 KeyPair to enable SSH access to the Instance A
        Type: 'AWS::EC2::KeyPair::KeyName'
        ConstraintDescription: must be the name of an existing EC2 KeyPair.
    EC2InstanceType:
        Description: EC2 instance types
        Type: String
        Default: t2.micro
        AllowedValues:
          - t1.micro
          - t2.nano
          - t2.micro
          - t2.small
          - t2.medium
          - t2.large
          - t3.micro
          - m1.small
          - m1.medium
          - m1.large
          - m1.xlarge
          - m2.xlarge
          - m2.2xlarge
          - m2.4xlarge
          - m3.medium
          - m3.large
          - m3.xlarge
          - m3.2xlarge
          - m4.large
          - m4.xlarge
          - m4.2xlarge
          - m4.4xlarge
          - m4.10xlarge
          - c1.medium
          - c1.xlarge
          - c3.large
          - c3.xlarge
          - c3.2xlarge
          - c3.4xlarge
          - c3.8xlarge
          - c4.large
          - c4.xlarge
          - c4.2xlarge
          - c4.4xlarge
          - c4.8xlarge
          - g2.2xlarge
          - g2.8xlarge
          - r3.large
          - r3.xlarge
          - r3.2xlarge
          - r3.4xlarge
          - r3.8xlarge
          - i2.xlarge
          - i2.2xlarge
          - i2.4xlarge
          - i2.8xlarge
          - d2.xlarge
          - d2.2xlarge
          - d2.4xlarge
          - d2.8xlarge
          - hi1.4xlarge
          - hs1.8xlarge
          - cr1.8xlarge
          - cc2.8xlarge
          - cg1.4xlarge
        ConstraintDescription: must be a valid EC2 instance type.
    
    DatabaseName:
      Default: "appdemo"
      Description: The database name (Default "appdemo", change if you are creating more than one database)
      Type: String

    DatabaseInstanceType:
        Default: db.t3.micro
        AllowedValues:
            - db.t3.micro
            - db.t2.micro
            - db.t2.small
            - db.t2.medium
            - db.t2.large
            - db.t2.xlarge
            - db.t2.2xlarge
            - db.r4.large
            - db.r4.xlarge
            - db.r4.2xlarge
            - db.r4.4xlarge
            - db.r4.8xlarge
            - db.r4.16xlarge
            - db.m4.large
            - db.m4.2xlarge
            - db.m4.4xlarge
            - db.m4.10xlarge
            - db.m4.16xlarge
        Description: "The instance type to use for the database. Pricing: https://aws.amazon.com/rds/mysql/pricing/"
        Type: String
    
    DatabasePassword:
        Default: "appdemo1"
        AllowedPattern: "[a-zA-Z0-9]+"
        ConstraintDescription: must contain only alphanumeric characters. Must have length 8-41.
        Description: The database admin account password. (Choose a secure password. Default appdemo1)
        MaxLength: '41'
        MinLength: '8'
        NoEcho: 'true'
        Type: String
    
    DatabaseUsername:
        Default: "appdemo"
        AllowedPattern: "[a-zA-Z0-9]+"
        ConstraintDescription: must contain only alphanumeric characters. Must have length 1-16
        Description: The database admin account user name. (Default "appdemo")
        MaxLength: '16'
        MinLength: '1'
        Type: String
    
    AllocatedStorage:
        Default: 10
        Description: Storage to allocate in GB (Default "10")
        Type: Number
        MinValue: 5
        MaxValue: 16384
        ConstraintDescription: Allocated storage size must be in range 20-16384 GB
Mappings:
  AWSInstanceType2Arch:
    t1.micro:
      Arch: HVM64
    t2.nano:
      Arch: HVM64
    t2.micro:
      Arch: HVM64
    t3.micro:
      Arch: HVM64
    t2.small:
      Arch: HVM64
    t2.medium:
      Arch: HVM64
    t2.large:
      Arch: HVM64
    m1.small:
      Arch: HVM64
    m1.medium:
      Arch: HVM64
    m1.large:
      Arch: HVM64
    m1.xlarge:
      Arch: HVM64
    m2.xlarge:
      Arch: HVM64
    m2.2xlarge:
      Arch: HVM64
    m2.4xlarge:
      Arch: HVM64
    m3.medium:
      Arch: HVM64
    m3.large:
      Arch: HVM64
    m3.xlarge:
      Arch: HVM64
    m3.2xlarge:
      Arch: HVM64
    m4.large:
      Arch: HVM64
    m4.xlarge:
      Arch: HVM64
    m4.2xlarge:
      Arch: HVM64
    m4.4xlarge:
      Arch: HVM64
    m4.10xlarge:
      Arch: HVM64
    c1.medium:
      Arch: HVM64
    c1.xlarge:
      Arch: HVM64
    c3.large:
      Arch: HVM64
    c3.xlarge:
      Arch: HVM64
    c3.2xlarge:
      Arch: HVM64
    c3.4xlarge:
      Arch: HVM64
    c3.8xlarge:
      Arch: HVM64
    c4.large:
      Arch: HVM64
    c4.xlarge:
      Arch: HVM64
    c4.2xlarge:
      Arch: HVM64
    c4.4xlarge:
      Arch: HVM64
    c4.8xlarge:
      Arch: HVM64
    g2.2xlarge:
      Arch: HVMG2
    g2.8xlarge:
      Arch: HVMG2
    r3.large:
      Arch: HVM64
    r3.xlarge:
      Arch: HVM64
    r3.2xlarge:
      Arch: HVM64
    r3.4xlarge:
      Arch: HVM64
    r3.8xlarge:
      Arch: HVM64
    i2.xlarge:
      Arch: HVM64
    i2.2xlarge:
      Arch: HVM64
    i2.4xlarge:
      Arch: HVM64
    i2.8xlarge:
      Arch: HVM64
    d2.xlarge:
      Arch: HVM64
    d2.2xlarge:
      Arch: HVM64
    d2.4xlarge:
      Arch: HVM64
    d2.8xlarge:
      Arch: HVM64
    hi1.4xlarge:
      Arch: HVM64
    hs1.8xlarge:
      Arch: HVM64
    cr1.8xlarge:
      Arch: HVM64
    cc2.8xlarge:
      Arch: HVM64
  AWSRegionArch2AMI:
    us-east-1:
      HVM64: ami-0947d2ba12ee1ff75
      HVMG2: ami-0aeb704d503081ea6
    us-west-2:
      HVM64: ami-01e24be29428c15b2
      HVMG2: ami-0fe84a5b4563d8f27
    us-west-1:
      HVM64: ami-0ec6517f6edbf8044
      HVMG2: ami-0a7fc72dc0e51aa77
    eu-west-1:
      HVM64: ami-08935252a36e25f85
      HVMG2: ami-0d5299b1c6112c3c7
    eu-west-2:
      HVM64: ami-01419b804382064e4
      HVMG2: NOT_SUPPORTED
    eu-west-3:
      HVM64: ami-0dd7e7ed60da8fb83
      HVMG2: NOT_SUPPORTED
    eu-central-1:
      HVM64: ami-0cfbf4f6db41068ac
      HVMG2: ami-0aa1822e3eb913a11
    eu-north-1:
      HVM64: ami-86fe70f8
      HVMG2: ami-32d55b4c
    ap-northeast-1:
      HVM64: ami-00a5245b4816c38e6
      HVMG2: ami-09d0e0e099ecabba2
    ap-northeast-2:
      HVM64: ami-00dc207f8ba6dc919
      HVMG2: NOT_SUPPORTED
    ap-northeast-3:
      HVM64: ami-0b65f69a5c11f3522
      HVMG2: NOT_SUPPORTED
    ap-southeast-1:
      HVM64: ami-05b3bcf7f311194b3
      HVMG2: ami-0e46ce0d6a87dc979
    ap-southeast-2:
      HVM64: ami-02fd0b06f06d93dfc
      HVMG2: ami-0c0ab057a101d8ff2
    ap-south-1:
      HVM64: ami-0ad42f4f66f6c1cc9
      HVMG2: ami-0244c1d42815af84a
    us-east-2:
      HVM64: ami-0cd3dfa4e37921605
      HVMG2: NOT_SUPPORTED
    ca-central-1:
      HVM64: ami-07423fb63ea0a0930
      HVMG2: NOT_SUPPORTED
    sa-east-1:
      HVM64: ami-05145e0b28ad8e0b2
      HVMG2: NOT_SUPPORTED
    cn-north-1:
      HVM64: ami-053617c9d818c1189
      HVMG2: NOT_SUPPORTED
    cn-northwest-1:
      HVM64: ami-0f7937761741dc640
      HVMG2: NOT_SUPPORTED

Resources:
    StackAlarmTopic:
        Type: AWS::SNS::Topic
        Properties:
            DisplayName: Stack Alarm Topic

    DatabaseSubnetGroup:
        Type: AWS::RDS::DBSubnetGroup
        Properties:
            Tags: 
            - Key: Name 
              Value: lab7dbgr
            DBSubnetGroupDescription: CloudFormation managed DB subnet group.
            SubnetIds:
                - !Ref PublicSubnet1
                - !Ref PublicSubnet2

    ParameterGroup:
        Type: "AWS::RDS::DBParameterGroup"
        Properties: 
            Description: Prisma DB parameter group 
            Family: MySQL5.7
            Parameters:
                max_connections: 300

    DatabaseInstance:
        Type: AWS::RDS::DBInstance
        Properties:
            Engine: mysql
            EngineVersion: 5.7.44
            DeleteAutomatedBackups: "true"
            DBInstanceClass:
                Ref: DatabaseInstanceType
            DBSubnetGroupName:
                Ref: DatabaseSubnetGroup    
            DBParameterGroupName: !Ref ParameterGroup
            PubliclyAccessible: "true"
            StorageType: "gp2"
            AllocatedStorage: !Ref AllocatedStorage
            BackupRetentionPeriod: 1
            DBInstanceIdentifier: !Ref DatabaseName
            MasterUsername:
              Ref: DatabaseUsername
            MasterUserPassword:
              Ref: DatabasePassword
            PreferredBackupWindow: 02:00-03:00
            PreferredMaintenanceWindow: mon:03:00-mon:04:00
            VPCSecurityGroups:
             - Ref: DatabaseSecurityGroup
    DatabaseReadReplica:
        Type: 'AWS::RDS::DBInstance'
        Properties: 
          DBInstanceIdentifier: Read-Replica-RDS-Lab7a 
          DBInstanceClass: db.t3.micro
          Engine: mysql
          SourceDBInstanceIdentifier: !Ref DatabaseInstance
          PubliclyAccessible: true
          StorageType: gp2

    DatabaseCPUAlarm:
        Type: AWS::CloudWatch::Alarm
        Properties:
            AlarmDescription: Primary database CPU utilization is over 50%.
            Namespace: AWS/RDS
            MetricName: CPUUtilization
            Unit: Percent
            Statistic: Average
            Period: 300
            EvaluationPeriods: 1
            Threshold: 50
            ComparisonOperator: GreaterThanOrEqualToThreshold
            Dimensions:
                - Name: DBInstanceIdentifier
                  Value:
                      Ref: DatabaseInstance
            AlarmActions:
                - Ref: StackAlarmTopic
            InsufficientDataActions:
                - Ref: StackAlarmTopic

    DatabaseMemoryAlarm:
        Type: AWS::CloudWatch::Alarm
        Properties:
            AlarmDescription: Primary database freeable memory is under 700MB.
            Namespace: AWS/RDS
            MetricName: FreeableMemory
            Unit: Bytes
            Statistic: Average
            Period: 300
            EvaluationPeriods: 2
            Threshold: 700000000
            ComparisonOperator: LessThanOrEqualToThreshold
            Dimensions:
                - Name: DBInstanceIdentifier
                  Value:
                      Ref: DatabaseInstance
            AlarmActions:
                - Ref: StackAlarmTopic
            InsufficientDataActions:
                - Ref: StackAlarmTopic
            OKActions: 
                - Ref: StackAlarmTopic

    VPC: 
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: "10.0.0.0/16"
            EnableDnsSupport: "true"
            EnableDnsHostnames: "true"
            Tags: 
                - Key: Name 
                  Value: !Join ["-", [!Ref DatabaseName, "database"]]

    InternetGateway:
        Type: AWS::EC2::InternetGateway
        Properties:
            Tags:
                - Key: Name
                  Value: !Ref DatabaseName

    InternetGatewayAttachment:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            InternetGatewayId: !Ref InternetGateway
            VpcId: !Ref VPC

    PublicSubnet1: 
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 0, !GetAZs ]
            CidrBlock: "10.0.0.0/24"
            MapPublicIpOnLaunch: true
            Tags: 
                - Key: Name 
                  Value: !Sub ${DatabaseName} Public Subnet (AZ1)

    PublicSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 1, !GetAZs ]
            CidrBlock: "10.0.1.0/24"
            MapPublicIpOnLaunch: true
            Tags: 
                - Key: Name 
                  Value: !Sub ${DatabaseName} Public Subnet (AZ2)

    PublicRouteTable:
        Type: AWS::EC2::RouteTable
        Properties: 
            VpcId: !Ref VPC
            Tags: 
                - Key: Name 
                  Value: !Sub ${DatabaseName} Public Routes

    DefaultPublicRoute: 
        Type: AWS::EC2::Route
        DependsOn: InternetGatewayAttachment
        Properties: 
            RouteTableId: !Ref PublicRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref InternetGateway

    PublicSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet1

    PublicSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet2

    DatabaseSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties: 
            VpcId: !Ref VPC
            GroupDescription: Security group for RDS
            SecurityGroupIngress:
                - CidrIp: 0.0.0.0/0
                  FromPort: 3306
                  ToPort: 3306
                  IpProtocol: tcp
            Tags: 
                - Key: Name
                  Value: SecGroup-RDS
    
    InstanceSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties: 
            VpcId: !Ref VPC
            GroupDescription: Security group for Instance A
            SecurityGroupIngress:
                - CidrIp: 0.0.0.0/0
                  FromPort: 8080
                  ToPort: 8080
                  IpProtocol: tcp
                - CidrIp: 0.0.0.0/0
                  FromPort: 443
                  ToPort: 443
                  IpProtocol: tcp
                - CidrIp: 0.0.0.0/0
                  FromPort: 80
                  ToPort: 80
                  IpProtocol: tcp
                - CidrIp: 0.0.0.0/0
                  FromPort: 22
                  ToPort: 22
                  IpProtocol: tcp
            Tags: 
                - Key: Name
                  Value: SecGroup-A
    InstanceA:
        Type: 'AWS::EC2::Instance'
        DependsOn: InternetGateway
        Properties:
          Tags: 
          - Key: Name
            Value: A
          InstanceType: !Ref EC2InstanceType
          KeyName: !Ref KeyName
          ImageId: !FindInMap 
            - AWSRegionArch2AMI
            - !Ref 'AWS::Region'
            - !FindInMap 
              - AWSInstanceType2Arch
              - !Ref EC2InstanceType
              - Arch
          NetworkInterfaces:
            - GroupSet:
                - !Ref InstanceSecurityGroup
              AssociatePublicIpAddress: 'true'
              DeviceIndex: '0'
              DeleteOnTermination: 'true'
              SubnetId: !Ref PublicSubnet1
          UserData: !Base64 
            'Fn::Join':
              - ''
              - - '#!/bin/bash -ex'
                - |+

                - yum update -y
                - |+

                - yum install -y mysql 
                - |+

                - amazon-linux-extras install docker -y
                - |+
                
                - usermod -a -G docker ec2-user
                - |+
                
                - service docker start
                - |+
                
                - export PUBLICIP=$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4)
                - |+

                - >-
                  docker run -d -p 80:80 -p 443:443 -e APPSERVER=http://$PUBLICIP:8080 -e TZ=America/Bogota  -h web1 fmorenod81/mtwa:web
 
Outputs:
    EC2Endpoint:
        Description: DNS Name of EC2 instance
        Value: !GetAtt InstanceA.PublicDnsName
        
    EC2IPEndpoint:
        Description: IP of EC2 instance
        Value: !GetAtt InstanceA.PublicIp
        
    DatabaseEndpoint: 
        Description: The database endpoint
        Value: !GetAtt DatabaseInstance.Endpoint.Address
    
    DatabasePort:
        Description: The database port
        Value: !GetAtt DatabaseInstance.Endpoint.Port